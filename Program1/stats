#!/bin/bash
#####
# CS 344 Fall 2017 Program 1 stats
# (Craig) Allan Reitan
# use: stats {-rows | -cols} [Input File Name]
# 9/25/2017
#####

#capturing the initial commandline parameters for later us in process control and file access.
d=$(echo $1 | cut -c -2)
f=$2

#DEBUG

# Check for correct amount of paramters
if [[ $# < 1 || $# > 2 ]]; then
	echo "$0: COMMAND LINE ERROR Number of Arguments- Usage: stats {-rows|-cols} [file]" 1>&2
	exit 1
# Checking directional parameter to make sure that a valid option was picked.  Displaying message and exiting with error.
elif [[ $d != "-r" && $d != "-c" ]]; then
    echo "$0: COMMAND LINE ERROR Rows or Columns- Usage: stats {-rows|-cols} [file]" 1>&2
    exit 1
fi

#Checking to see if the file name provided is readable or if it does NOT exist before proceeding.  Displaying message and exiting with error.
if [[ (! -r "$f" || ! -e "$f") && $# == 2 ]]; then
    echo "$0: COMMAND LINE ERROR File Access - Cannot Read or Locate $f" 1>&2
    exit 1
fi

# Initialize the variables that I plan to use with the loops and calculations
# count: will count the iteration number through a loop
# number: a holding variable if a value is read out of file or filtered out of some other data source
# avg: calulcate the average for a data set
# median: calculate or derive the median value for data set
# These are declared for planning purpose, may not actually be implemented if a better alogrithm can be found.
# avgList: Accumulate series of avg calculations for output to another location.
# medianList: Accumulate series of medians calculations for output to another location.
count=0; number=0
avg=0; avgList=0
median=0; medianList=0
userInput='';userData='';

# Get manual input from user
if [[ $# == 1 ]]; then
	while [[ $userInput != *"D" ]]; do
		read -e -p "Input DATA Set (Use D when Done): " userInput
		#DEBUG
		echo "userInput = $userInput"
		echo "$userInput">userInput000

		if [[ $userInput != *"D" ]]; then
			echo $userInput>>userInput_File$$
		fi
		#statements
	done

	cat userInput_File$$>userData
	rm userInput000
	rm userInput_File$$
else
	echo $(<$f)>userData
fi

#DEBUG
echo "userData = $userData"

# Prepare Output
echo "Average Median"

# Process by Rows
#if [[ $d == "-r" ]]; then

# Process by Cols
#elif [[ $d == "-c" ]]; then

#else
#	echo "Calculations did not occur."
#fi
